<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog - Amine Babouri</title>
    <link>https://blog.aminebabouri.online/fr/</link>
    <description>Recent content on Blog - Amine Babouri</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 31 May 2023 14:59:09 +0200</lastBuildDate><atom:link href="https://blog.aminebabouri.online/fr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comment installer Docker sur Ubuntu</title>
      <link>https://blog.aminebabouri.online/fr/posts-fr/install_docker/</link>
      <pubDate>Wed, 31 May 2023 14:59:09 +0200</pubDate>
      
      <guid>https://blog.aminebabouri.online/fr/posts-fr/install_docker/</guid>
      <description>Introduction Pour commencer, qu&amp;rsquo;est ce que Docker ?
Docker est une technologie de conteneurisation qui permet d&amp;rsquo;ex√©cuter des applications isol√©es dans des conteneurs.
Les conteneurs empaquettent les applications avec leurs d√©pendances et leurs biblioth√®ques, ce qui facilite leur d√©ploiement et leur ex√©cution. Avec Docker, vous pouvez ex√©cuter diff√©rentes versions de distributions Linux, d&amp;rsquo;applications et de services tels que des serveurs web, des bases de donn√©es et des langages de programmation.</description>
      <content>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Pour commencer, qu&amp;rsquo;est ce que &lt;code&gt;Docker&lt;/code&gt; ?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;Docker&lt;/code&gt; est une technologie de conteneurisation qui permet d&amp;rsquo;ex√©cuter des applications isol√©es dans des conteneurs.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Les &lt;code&gt;conteneurs&lt;/code&gt; empaquettent les applications avec leurs d√©pendances et leurs biblioth√®ques, ce qui facilite leur d√©ploiement et leur ex√©cution. Avec &lt;code&gt;Docker&lt;/code&gt;, vous pouvez ex√©cuter diff√©rentes versions de &lt;code&gt;distributions Linux&lt;/code&gt;, d&amp;rsquo;applications et de services tels que des serveurs web, des bases de donn√©es et des langages de programmation.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Il simplifie le d√©ploiement des applications en incluant dans le conteneur tout ce qui est n√©cessaire √† leur fonctionnement. &lt;code&gt;Docker&lt;/code&gt; r√©volutionne le d√©ploiement et la gestion des &lt;code&gt;applications&lt;/code&gt; en offrant flexibilit√©, isolation et `utilisation&amp;rsquo; efficace des ressources.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;mise-√†-jour-syst√®me&#34;&gt;Mise √† jour syst√®me&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sudo apt update -y &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;ajoutez-le-d√©p√¥t-docker-en-ex√©cutant-la-commande-&#34;&gt;Ajoutez le d√©p√¥t Docker en ex√©cutant la commande :&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sudo apt install apt-transport-https ca-certificates curl software-properties-common
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;t√©lcharger-le-packet-gnupg&#34;&gt;T√©lcharger le packet gnupg&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sudo apt install gnupg
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;importez-la-cl√©-gpg-de-docker-avec-la-commande-&#34;&gt;Importez la cl√© GPG de Docker avec la commande :&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;ajouter-le-d√©p√¥t-docker-au-syst√®me-&#34;&gt;Ajouter le d√©p√¥t Docker au syst√®me :&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;echo &amp;#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;ajouter-le-d√©p√¥t-docker-au-syst√®me--1&#34;&gt;Ajouter le d√©p√¥t Docker au syst√®me :&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;installez-docker-en-ex√©cutant-la-commande-suivante-&#34;&gt;Installez Docker en ex√©cutant la commande suivante :&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sudo apt install docker-ce docker-ce-cli containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;v√©rifier-la-version-de-docker&#34;&gt;V√©rifier la version de docker&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;docker --version
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;test&#34;&gt;Test&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Vous pouvez maintenant commencer √† utiliser Docker pour ex√©cuter et g√©rer des applications conteneuris√©es. Au revoir ! üëã&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>D√©ployer Nginx sur AKS avec une pipeline</title>
      <link>https://blog.aminebabouri.online/fr/posts-fr/d%C3%A9ployer_nginx_sur_un_aks/</link>
      <pubDate>Tue, 30 May 2023 22:12:30 +0200</pubDate>
      
      <guid>https://blog.aminebabouri.online/fr/posts-fr/d%C3%A9ployer_nginx_sur_un_aks/</guid>
      <description>Dans ce projet, j&amp;rsquo;ai d√©ploy√© Nginx sur Azure Kubernetes Service (AKS) en utilisant une pipeline CI/CD. J&amp;rsquo;ai automatis√© le d√©ploiement en utilisant des scripts Terraform et j&amp;rsquo;ai utilis√© Azure DevOps pour cr√©er la pipeline.
Sch√©ma de l&amp;rsquo;infrastructure :
√âtapes : Cr√©er un r√©f√©rentiel Git dans Azure Cr√©er un script Terraform pour cr√©er l&amp;rsquo;infrastructure AKS Cr√©er un manifeste YAML pour d√©ployer Nginx sur le cluster Cr√©er la pipeline CI/CD sur Azure Devops Cr√©er un r√©f√©rentiel Git dans Azure ‚û°Ô∏è Connectez-vous √† votre compte Azure DevOps</description>
      <content>&lt;hr&gt;
&lt;p&gt;Dans ce projet, j&amp;rsquo;ai d√©ploy√© Nginx sur Azure Kubernetes Service (AKS) en utilisant une pipeline CI/CD. J&amp;rsquo;ai automatis√© le d√©ploiement en utilisant des scripts Terraform et j&amp;rsquo;ai utilis√© Azure DevOps pour cr√©er la pipeline.&lt;/p&gt;
&lt;p&gt;Sch√©ma de l&amp;rsquo;infrastructure :&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.aminebabouri.online/images/infra.svg&#34; alt=&#34;Sch√©ma&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;√©tapes-&#34;&gt;√âtapes :&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Cr√©er un r√©f√©rentiel Git dans Azure&lt;/li&gt;
&lt;li&gt;Cr√©er un script Terraform pour cr√©er l&amp;rsquo;infrastructure AKS&lt;/li&gt;
&lt;li&gt;Cr√©er un manifeste YAML pour d√©ployer Nginx sur le cluster&lt;/li&gt;
&lt;li&gt;Cr√©er la pipeline CI/CD sur Azure Devops&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;cr√©er-un-r√©f√©rentiel-git-dans-azure&#34;&gt;Cr√©er un r√©f√©rentiel Git dans Azure&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;‚û°Ô∏è Connectez-vous √† votre compte Azure DevOps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;‚û°Ô∏è S√©lectionnez l&amp;rsquo;organisation Azure DevOps dans laquelle vous souhaitez cr√©er le r√©f√©rentiel Git.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;‚û°Ô∏è Acc√©dez au projet dans lequel vous souhaitez cr√©er le r√©f√©rentiel Git, ou cr√©ez un nouveau projet si n√©cessaire.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;‚û°Ô∏è Cliquez sur l&amp;rsquo;onglet &amp;ldquo;Repos&amp;rdquo; dans la barre de navigation sup√©rieure pour acc√©der √† la page des r√©f√©rentiels.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;‚û°Ô∏è Cliquez sur le bouton &amp;ldquo;New repository&amp;rdquo; (Nouveau r√©f√©rentiel) pour cr√©er un nouveau r√©f√©rentiel Git.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;‚û°Ô∏è Dans la fen√™tre contextuelle qui s&amp;rsquo;ouvre :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Entrez un &amp;ldquo;Repository name&amp;rdquo; (Nom du r√©f√©rentiel) significatif.&lt;/li&gt;
&lt;li&gt;S√©lectionnez &amp;ldquo;Git&amp;rdquo; comme syst√®me de &amp;ldquo;Version control&amp;rdquo; (Contr√¥le de version).&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;‚û°Ô∏è Cliquez sur le bouton &amp;ldquo;Create&amp;rdquo; (Cr√©er) pour cr√©er le r√©f√©rentiel Git.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;‚û°Ô∏è Vous serez redirig√© vers la page du r√©f√©rentiel nouvellement cr√©√©.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;cr√©er-un-script-terraform&#34;&gt;Cr√©er un script terraform&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;terraform {
  required_providers {
    azurerm = {
      source = &amp;#34;hashicorp/azurerm&amp;#34;
      version = &amp;#34;3.57.0&amp;#34;
    }
  }
}

provider &amp;#34;azurerm&amp;#34; {
  features {}
  tenant_id       = &amp;#34;&amp;#34; # peut √™tre obtenue en faisant un $ az account show
  subscription_id = &amp;#34;&amp;#34; # peut √™tre obtenue en faisant un $ az account show
}

data &amp;#34;azurerm_resource_group&amp;#34; &amp;#34;rg&amp;#34; {
  name = &amp;#34;&amp;#34;
}

output &amp;#34;id&amp;#34; {
  value = data.azurerm_resource_group.rg.id
}

resource &amp;#34;azurerm_kubernetes_cluster&amp;#34; &amp;#34;aks&amp;#34; {
  name                = &amp;#34;&amp;#34;
  location            = data.azurerm_resource_group.rg.location
  resource_group_name = data.azurerm_resource_group.rg.name
  dns_prefix          = &amp;#34;&amp;#34;

  default_node_pool {
    name       = &amp;#34;default&amp;#34;
    node_count = 1
    vm_size    = &amp;#34;Standard_D2_v2&amp;#34;
  }

  identity {
    type = &amp;#34;SystemAssigned&amp;#34;
  }
}

output &amp;#34;client_certificate&amp;#34; {
  value     = azurerm_kubernetes_cluster.aks.kube_config.0.client_certificate
  sensitive = true
}

output &amp;#34;kube_config&amp;#34; {
  value = azurerm_kubernetes_cluster.aks.kube_config_raw

  sensitive = true
}
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;cr√©er-le-manifest-yaml-pour-d√©ployer-nginx&#34;&gt;Cr√©er le manifest YAML pour d√©ployer nginx&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;cr√©er-la-pipeline&#34;&gt;Cr√©er la pipeline&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Se rendre dans la s√©ction &amp;ldquo;Pipelines&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Cliquer sur &amp;ldquo;New pipeline&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Poursuivre en fonction de la source de notre code (Azure Repos Git dans mon cas)&lt;/li&gt;
&lt;li&gt;S√©l√©ctionner son d√©p√¥t&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;trigger:
  branches:
    include:
      - main

pool:
  vmImage: &amp;#39;ubuntu-latest&amp;#39;

steps:
- checkout: self

- script: az login

- task: UsePythonVersion@0
  inputs:
    versionSpec: &amp;#39;3.8&amp;#39;
    addToPath: true
    
- task: KubectlInstaller@0
  displayName: Kubectl installer
  inputs: 
    kubectlVersion: latest

- script: |
    terraform init
    terraform plan -out=tfplan
  displayName: &amp;#39;Execute Terraform init and plan&amp;#39;

- script: |
    terraform apply -auto-approve tfplan
  displayName: &amp;#39;Execute Terraform apply&amp;#39;

- script: az aks get-credentials --resource-group &amp;lt;ins√©rer nom du groupe de ressource&amp;gt; --name &amp;lt;ins√©rer nom de l&amp;#39;aks&amp;gt;
  displayName: &amp;#39;Get AKS credentials&amp;#39;
  
- script: kubectl apply -f nginx.yaml
  displayName: &amp;#39;Deploy YAML manifest&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;fin&#34;&gt;Fin&lt;/h1&gt;
&lt;p&gt;Connecter vous ensuite √† votre cluster, pour connaitre l&amp;rsquo;adresse ip puiblique de votre cluster, √©x√©cutez cette commande :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;kubectl get svc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Le tutoriel s&amp;rsquo;ach√®ve ici en √©sp√©rant vous avoir aid√©, salut üëã&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Bonjour √† tous</title>
      <link>https://blog.aminebabouri.online/fr/posts-fr/hello/</link>
      <pubDate>Thu, 25 May 2023 05:35:29 +0200</pubDate>
      
      <guid>https://blog.aminebabouri.online/fr/posts-fr/hello/</guid>
      <description>Bienvenue sur mon blog, ceci est mon premier post.</description>
      <content>&lt;hr&gt;
&lt;p&gt;Bienvenue sur mon blog, ceci est mon premier post.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Comment mettre en place la supervision et le Monitoring d&#39;un AKS dans Azure ? </title>
      <link>https://blog.aminebabouri.online/fr/posts-fr/brief/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.aminebabouri.online/fr/posts-fr/brief/</guid>
      <description>Bienvenue sur mon blog, ceci est mon premier post.</description>
      <content>&lt;hr&gt;
&lt;p&gt;Bienvenue sur mon blog, ceci est mon premier post.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
